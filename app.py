import streamlit as st
import streamlit.components.v1 as components

# Configuraci√≥n inicial de la p√°gina
st.set_page_config(page_title="MC-14 y MPDI", layout="wide")

# T√≠tulo de la aplicaci√≥n
st.title("Selecciona una metodolog√≠a")

# Definir los diagramas Mermaid
mc14_diagram = """
flowchart TD
    A([üîç Observaci√≥n Curiosa]) --> B[‚ùì Planteamiento del Problema]
    B --> C[/üìö üìñ Revisi√≥n de Literatura/]
    C --> D{üí° Hip√≥tesis}
    D -->|Formulaci√≥n| E[üî® üî© Dise√±o Experimental]
    E --> F([üìã Recolecci√≥n de Datos])
    F --> G[[üìà üìä An√°lisis de Datos]]
    G --> H{ ‚úÖ Conclusi√≥n}
    H -->|üëç Apoya Hip√≥tesis| I[/üìÇ Redacci√≥n del Informe/]
    H -->|üëé ‚ùå No Apoya| J[[üìå Revisi√≥n de Hip√≥tesis]]
    J --> E
    I --> K((üë® üë© Revisi√≥n por Pares))
    K --> L[(üìÇ üì• Publicaci√≥n)]
    L --> M([‚ôªÔ∏è Retroalimentaci√≥n])
    M -->|Nuevas Preguntas| A
    M -->|üèÅ Fin del Proceso| N([üèÅ Fin])
"""

mpdi_diagram = """
flowchart TD
    A([üè† Empatizar y Contextualizar]) --> B[/‚ùì Definir el Problema/]
    B --> C[/üë®‚Äçüíª üíæ üì≤ üîó Investigaci√≥n Web y DeepSearch/]
    C --> D{üí° ‚ú® Ideaci√≥n y Conceptualizaci√≥n}
    D -->|Generaci√≥n| E[‚úèÔ∏è üìù üé® üìê Bocetos, Render 2D y Prototipos 3D]
    E --> F([‚öñÔ∏è üîß Evaluaci√≥n T√©cnica])
    F --> G[[‚öôÔ∏è Iteraci√≥n y Refinamiento]]
    G --> H{üìë Documentaci√≥n T√©cnica}
    H -->|üìÑ Documentaci√≥n| I[/üë§ Validaci√≥n con Usuarios/]
    H -->|üëé No Aprobado ‚ùå| J[[üîÑ Revisi√≥n de Dise√±o]]
    J --> E
    I --> K((üè≠ üî© Producci√≥n y Fabricaci√≥n))
    K --> L[(üöÄ Lanzamiento)]
    L --> M([üì¢ üë™ üë§ Comunicaci√≥n y Marketing para Usuarios])
    M -->|Nuevas Mejoras| A
    M -->|üéØ Fin del Proceso| N([üéØ Fin])
"""

# Funci√≥n para renderizar el diagrama Mermaid
def render_mermaid(diagram):
    mermaid_html = f"""
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <div class="mermaid" style="overflow: auto; max-height: 800px;">
    {diagram}
    </div>
    <script>
        mermaid.initialize({{ startOnLoad: true }});
    </script>
    """
    # Aumentamos la altura del componente HTML
    components.html(mermaid_html, height=800, scrolling=True)

# Botones para seleccionar la metodolog√≠a
option = st.selectbox(
    "Elige una metodolog√≠a",
    ["MC-14: M√©todo Cient√≠fico", "MPDI: Dise√±o Industrial"]  # Usamos una lista expl√≠cita
)

# Mostrar el diagrama correspondiente
if option == "MC-14: M√©todo Cient√≠fico":
    st.subheader("MC-14: M√©todo Cient√≠fico")
    render_mermaid(mc14_diagram)
elif option == "MPDI: Dise√±o Industrial":
    st.subheader("MPDI: Dise√±o Industrial")
    render_mermaid(mpdi_diagram)
