import streamlit as st
import streamlit.components.v1 as components

# Configuraci√≥n inicial de la p√°gina
st.set_page_config(page_title="MC-14 y MPDI", layout="wide")

# Estilo CSS personalizado para mejorar la est√©tica
st.markdown(
    """
    <style>
        /* Fondo oscuro para toda la p√°gina */
        body {
            background-color: #2c3e50;
            color: white;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Estilo para los botones del selectbox */
        .stSelectbox > div {
            background-color: #34495e;
            border-radius: 8px;
            padding: 10px;
            color: white;
            font-size: 16px;
        }

        .stSelectbox > div:hover {
            background-color: #2980b9;
        }

        /* Estilo para los subt√≠tulos */
        h2 {
            color: #ecf0f1;
            text-align: center;
        }

        /* Contenedor del diagrama */
        .diagram-container {
            background-color: #34495e;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    </style>
    """,
    unsafe_allow_html=True,
)

# T√≠tulo de la aplicaci√≥n
st.title("Selecciona una metodolog√≠a")

# Definir los diagramas Mermaid con colores inline
mc14_diagram = """
flowchart TD
    %% Colores inline para MC-14
    A([üîç Observaci√≥n Curiosa]):::obs --> B[‚ùì Planteamiento del Problema]:::problem
    B --> C[/üìö üìñ Revisi√≥n de Literatura/]:::review
    C --> D{üí° Hip√≥tesis}:::hypothesis
    D -->|Formulaci√≥n| E[üî® üî© Dise√±o Experimental]:::design
    E --> F([üìã Recolecci√≥n de Datos]):::data
    F --> G[[üìà üìä An√°lisis de Datos]]:::analysis
    G --> H{ ‚úÖ Conclusi√≥n}:::conclusion
    H -->|üëç Apoya Hip√≥tesis| I[/üìÇ Redacci√≥n del Informe/]:::report
    H -->|üëé ‚ùå No Apoya| J[[üìå Revisi√≥n de Hip√≥tesis]]:::revision
    J --> E
    I --> K((üë® üë© Revisi√≥n por Pares)):::peer
    K --> L[(üìÇ üì• Publicaci√≥n)]:::publication
    L --> M([‚ôªÔ∏è Retroalimentaci√≥n]):::feedback
    M -->|Nuevas Preguntas| A
    M -->|üèÅ Fin del Proceso| N([üèÅ Fin]):::end

    %% Clases para colores
    classDef obs fill:#1abc9c,stroke:#16a085,color:#fff
    classDef problem fill:#3498db,stroke:#2980b9,color:#fff
    classDef review fill:#9b59b6,stroke:#8e44ad,color:#fff
    classDef hypothesis fill:#e67e22,stroke:#d35400,color:#fff
    classDef design fill:#f1c40f,stroke:#f39c12,color:#000
    classDef data fill:#2ecc71,stroke:#27ae60,color:#000
    classDef analysis fill:#e74c3c,stroke:#c0392b,color:#fff
    classDef conclusion fill:#1abc9c,stroke:#16a085,color:#fff
    classDef report fill:#3498db,stroke:#2980b9,color:#fff
    classDef revision fill:#9b59b6,stroke:#8e44ad,color:#fff
    classDef peer fill:#e67e22,stroke:#d35400,color:#fff
    classDef publication fill:#f1c40f,stroke:#f39c12,color:#000
    classDef feedback fill:#2ecc71,stroke:#27ae60,color:#000
    classDef end fill:#e74c3c,stroke:#c0392b,color:#fff
"""

mpdi_diagram = """
flowchart TD
    %% Colores inline para MPDI
    A([üè† Empatizar y Contextualizar]):::context --> B[/‚ùì Definir el Problema/]:::problem
    B --> C[/üë®‚Äçüíª üíæ üì≤ üîó Investigaci√≥n Web y DeepSearch/]:::research
    C --> D{üí° ‚ú® Ideaci√≥n y Conceptualizaci√≥n}:::ideation
    D -->|Generaci√≥n| E[‚úèÔ∏è üìù üé® üìê Bocetos, Render 2D y Prototipos 3D]:::prototyping
    E --> F([‚öñÔ∏è üîß Evaluaci√≥n T√©cnica]):::evaluation
    F --> G[[‚öôÔ∏è Iteraci√≥n y Refinamiento]]:::iteration
    G --> H{üìë Documentaci√≥n T√©cnica}:::documentation
    H -->|üìÑ Documentaci√≥n| I[/üë§ Validaci√≥n con Usuarios/]:::validation
    H -->|üëé No Aprobado ‚ùå| J[[üîÑ Revisi√≥n de Dise√±o]]:::redesign
    J --> E
    I --> K((üè≠ üî© Producci√≥n y Fabricaci√≥n)):::production
    K --> L[(üöÄ Lanzamiento)]:::launch
    L --> M([üì¢ üë™ üë§ Comunicaci√≥n y Marketing para Usuarios]):::marketing
    M -->|Nuevas Mejoras| A
    M -->|üéØ Fin del Proceso| N([üéØ Fin]):::end

    %% Clases para colores
    classDef context fill:#1abc9c,stroke:#16a085,color:#fff
    classDef problem fill:#3498db,stroke:#2980b9,color:#fff
    classDef research fill:#9b59b6,stroke:#8e44ad,color:#fff
    classDef ideation fill:#e67e22,stroke:#d35400,color:#fff
    classDef prototyping fill:#f1c40f,stroke:#f39c12,color:#000
    classDef evaluation fill:#2ecc71,stroke:#27ae60,color:#000
    classDef iteration fill:#e74c3c,stroke:#c0392b,color:#fff
    classDef documentation fill:#1abc9c,stroke:#16a085,color:#fff
    classDef validation fill:#3498db,stroke:#2980b9,color:#fff
    classDef redesign fill:#9b59b6,stroke:#8e44ad,color:#fff
    classDef production fill:#e67e22,stroke:#d35400,color:#fff
    classDef launch fill:#f1c40f,stroke:#f39c12,color:#000
    classDef marketing fill:#2ecc71,stroke:#27ae60,color:#000
    classDef end fill:#e74c3c,stroke:#c0392b,color:#fff
"""

# Funci√≥n para renderizar el diagrama Mermaid
def render_mermaid(diagram):
    mermaid_html = f"""
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <div class="diagram-container">
        <div class="mermaid" style="overflow: auto; max-height: 800px;">
        {diagram}
        </div>
    </div>
    <script>
        mermaid.initialize({{ startOnLoad: true }});
    </script>
    """
    components.html(mermaid_html, height=800, scrolling=True)

# Botones para seleccionar la metodolog√≠a
option = st.selectbox(
    "Elige una metodolog√≠a",
    ["MC-14: M√©todo Cient√≠fico", "MPDI: Dise√±o Industrial"]
)

# Mostrar el diagrama correspondiente
if option == "MC-14: M√©todo Cient√≠fico":
    st.subheader("MC-14: M√©todo Cient√≠fico")
    render_mermaid(mc14_diagram)
elif option == "MPDI: Dise√±o Industrial":
    st.subheader("MPDI: Dise√±o Industrial")
    render_mermaid(mpdi_diagram)
